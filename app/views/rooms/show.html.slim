h1.w-full.p-6.text-lg.font-bold.bg-white.flex.justify-center
  |キズ点検表
- mark_keys = %w[id location created_at]
- marks = @room.map.marks.order(:created_at).map {|mark| mark.attributes.filter {|k,_| mark_keys.include?(k)}}
- map_keys = %w[id trimming]
- map = @room.map.attributes.filter {|k,_| map_keys.include?(k)}
- map[:image_url] = url_for @room.map.image if @room.map.image.present?
#rooms-show(
room_id="#{@room.id}"
marks="#{marks.to_json}"
map="#{map.to_json}"
)

div
  table.table
    thead
      tr
        th 番号
        th= Mark.human_attribute_name(:description)
        th= Mark.human_attribute_name(:created_at)
        th
        th
    tbody
      - @room.map.marks.order(:created_at).each_with_index do |mark, index|
        tr id="mark-#{mark.id}"
          td= index + 1
          td= mark.brief_description
          td= mark.created_at
          td= link_to '変更', edit_room_mark_path(mark.map.room, mark), data: { turbo: false }, class: 'btn btn-lime'
          td= link_to '削除', room_mark_path(mark.map.room, mark), data: { turbo_method: :delete, turbo_confirm: "キズ（#{mark.brief_description}）を削除します。よろしいですか？" }, class: 'btn btn-lime'

  = link_to 'キズ追加', new_room_mark_path(@room), id: 'create-mark', class: 'btn btn-lime', data: { turbo: false }
  = link_to 'ルーム削除', @room, data: { turbo_method: :delete, turbo_confirm: 'ルームを削除します。よろしいですか？' }, class: 'btn btn-lime'
